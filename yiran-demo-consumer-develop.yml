spring:
  cloud:
    bus:
      ack:
        destination-service: ${spring.application.name}

server:
  servlet:
    session:
      cookie:
        name: OAUTH2SESSION
                      
# 单机模式配置
---
spring:
  profiles: develop
  
  redis:
    redisson: false
    host: 127.0.0.1
    port: 6379
    
eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}
    prefer-ip-address: true  
  client:
    service-url:
      defaultZone: http://admin:admin@127.0.0.1:8761/eureka/
   
security:
  oauth2:
    authorization:
      matchers: /swagger-ui.html, /webjars/**, /swagger-resources/**, /v2/api-docs, /static/**
    client:
      scope: webclient
      clientId: eagleeye
      clientSecret: thisissecret
      accessTokenUri: http://127.0.0.1:8887/oauth/token
      userAuthorizationUri: http://127.0.0.1:8887/oauth/authorize
    resource:
      jwt:
        key-uri: http://127.0.0.1:8887/oauth/token_key 

# 指定服务负载均衡策略为轮询
# BestAvailableRule 选择一个最小的并发请求的server
# AvailabilityFilteringRule 过滤掉那些因为一直连接失败的被标记为circuit tripped的后端server，并过滤掉那些高并发的的后端server（active connections 超过配置的阈值）
# WeightedResponseTimeRule 根据响应时间分配一个weight，响应时间越长，weight越小，被选中的可能性越低
# RetryRule 对选定的负载均衡策略机上重试机制
# RoundRobinRule 轮询选择server
# RandomRule 随机选择一个server
# ZoneAvoidanceRule 复合判断server所在区域的性能和server的可用性选择server
yiran-demo-provider:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule
           
# 使用feign+hystrix断路时必须增加以下配置，否则不会生效
feign:
  hystrix:
    enabled: true
    
#Hystrix THREAD模式下，feign无法找到上下文中的令牌，导致令牌无法传递
#方案一：自定义HystrixConcurrencyStrategy
#方案二：将线程策略设置为SEMAPHORE（官方不推荐）
#hystrix:
#  command:
#    default:
#      execution:
#        isolation:
#          thread:
#            timeoutInMilliseconds: 3000
#          strategy: SEMAPHORE

#hystrix:
#  shareSecurityContext: true
  
management:
  endpoints:
    health:
      show-details: always
    web:
      exposure:
        include: hystrix.stream, health, info
                               
logging:
  level:
    org.springframework.web: INFO
    root: INFO
    org.hibernate: INFO
          
# 集群模式配置
---
spring:
  profiles: production
  
  redis:
    redisson: false
    host: redis-standalone.base.svc.cluster.local
    port: 6379
          
eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}
    prefer-ip-address: true  
  client:
    service-url:
      defaultZone: http://admin:admin@yiran-base-eureka-s1.base.svc.cluster.local:8761/eureka/, http://admin:admin@yiran-base-eureka-s2.base.svc.cluster.local:8761/eureka/

security:
  oauth2:
    authorization:
      matchers: /swagger-ui.html, /webjars/**, /swagger-resources/**, /v2/api-docs, /static/**
    client:
      scope: webclient
      clientId: eagleeye
      clientSecret: thisissecret
      accessTokenUri: http://yiran-base-authorization.base.svc.cluster.local:8887/oauth/token
      userAuthorizationUri: http://yiran-base-authorization.base.svc.cluster.local:8887/oauth/authorize
    resource:
      jwt:
        key-uri: http://yiran-base-authorization.base.svc.cluster.local:8887/oauth/token_key 

# 指定服务负载均衡策略为轮询
# BestAvailableRule 选择一个最小的并发请求的server
# AvailabilityFilteringRule 过滤掉那些因为一直连接失败的被标记为circuit tripped的后端server，并过滤掉那些高并发的的后端server（active connections 超过配置的阈值）
# WeightedResponseTimeRule 根据响应时间分配一个weight，响应时间越长，weight越小，被选中的可能性越低
# RetryRule 对选定的负载均衡策略机上重试机制
# RoundRobinRule 轮询选择server
# RandomRule 随机选择一个server
# ZoneAvoidanceRule 复合判断server所在区域的性能和server的可用性选择server
yiran-demo-provider:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule
           
# 使用feign+hystrix断路时必须增加以下配置，否则不会生效
feign:
  hystrix:
    enabled: true
    
#Hystrix THREAD模式下，feign无法找到上下文中的令牌，导致令牌无法传递
#方案一：自定义HystrixConcurrencyStrategy
#方案二：将线程策略设置为SEMAPHORE（官方不推荐）
#hystrix:
#  command:
#    default:
#      execution:
#        isolation:
#          thread:
#            timeoutInMilliseconds: 3000
#          strategy: SEMAPHORE
          
management:
  endpoints:
    health:
      show-details: always
    web:
      exposure:
        include: hystrix.stream, health, info
                         
logging:
  level:
    org.springframework.web: INFO
    root: INFO
    org.hibernate: INFO